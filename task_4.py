"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
users = {'Олег': {'password': 123123, 'activated': 1},
         'Антон': {'password': 321231, 'activated': 1},
         'Сергей': {'password': 111111, 'activated': 0}}

"Сложность O(N)"


def authentication(dictionary, login, password):
    for key, value in dictionary.items():  # О(N)
        if key == login:  # O(1)
            if value['password'] == password:  # O(1)
                if value['activated'] == 1:  # O(1)
                    return "Доступ открыт"  # O(1)
                else:
                    return "Пройдите активацию"  # O(1)
            else:
                return "Ошибка пароля"  # O(1)


"Сложность O(1)"


def authentication_v2(dictionary, login, password):
    if dictionary.get(login) is not None:  # O(1)
        if dictionary[login].get('password') == password:  # O(1)
            if dictionary[login].get('activated') == 1:  # O(1)
                return "Доступ открыт"  # O(1)
            else:
                return "Пройдите активацию"  # O(1)
        else:
            return "Неверный пароль"  # O(1)
    else:
        return "Ошибка логина"  # O(1)


print(authentication(users, 'Олег', 123123))
print(authentication(users, 'Сергей', 111111))
print(authentication_v2(users, 'Олег', 123123))
print(authentication_v2(users, 'Сергей', 111111))
